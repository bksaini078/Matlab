function[noOfTriangle TriangleMatrix] = Compute_Triangle(filename)A= load_sparse(filename,"Un");%Acube=A^3; this is for checking trace(A^3) is equal to trace(lambba^3);if(trace(A)>0) A=A-diag(diag(A));endif%[U lambda]= eigs(A,150); taking too much time  %noOfTriangle= trace(lambda^3)/6;%taking too much time  %Acube=A^2*A;Elapsed time is 9.43284 seconds.% Asq=A*A; %no_of_triangle= [length(A)];%for i = 1: length(A) %  no_of_triangle(i)=Asq(i,:)*A(:,i);# taking too much time .%endfor   Acube=A*A*A;%Elapsed time is 8.90018 seconds.%[U lambda] = eigs(A,150);%lcube= lambda^3;%TriangleMatrix=diag(lambda);%lcube= TriangleMatrix.^3;TriangleMatrix= diag(Acube);noOfTriangle= full(trace(Acube)/6);%noOfTriangle= full(sum(lcube)/6);%noOfTriangle=sum(no_of_triangle)/6;endfunction;